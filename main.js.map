{"version":3,"file":"main.js","mappings":"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","sources":["webpack://ahj-events-2/./src/js/mainWindowStructore.js","webpack://ahj-events-2/./src/js/Task.js","webpack://ahj-events-2/./src/js/taskVault.js","webpack://ahj-events-2/./src/js/TaskManager.js","webpack://ahj-events-2/./src/js/app.js","webpack://ahj-events-2/./src/index.js"],"sourcesContent":["export function mainWindowStructore() {\n  const mainWindow = document.createElement(\"div\");\n  mainWindow.classList.add(\"main-window\");\n  mainWindow.innerHTML = `<div class=\"form\">\n                            <div class=\"top-tasks\">\n                              <form class=\"inner-block form\">\n                                <label for=\"task-input\"><h1>TOP Tasks</h1></label>\n                                <input class=\"input-task\" type=\"text\" id=\"task-input\" required>\n                              </form>\n                            </div>\n                            <div class=\"inner-block pinned\">\n                              <div>\n                                <h2>Pinned:</h2>\n                              </div>\n                            </div>\n                            <div class=\"inner-block all-tasks\">\n                              <div>\n                                <h2>All tasks:</h2>                                \n                              </div>\n                            </div>\n                          </div>`;\n  document.body.appendChild(mainWindow);\n}\n","export class Task {\n  constructor(taskText) {\n    this.taskText = taskText;\n    this.taskPinned = false;\n    this.id = Date.now();\n  }\n}\n","export const taskVault = [];\n","import { Task } from \"./Task\";\nimport { taskVault } from \"./taskVault\";\n\nexport class TaskManager {\n  constructor() {\n    this.allTaskBox = document.querySelector(\".all-tasks\");\n    this.pinned = document.querySelector(\".pinned\");\n    this.inputTask = document.querySelector(\".input-task\");\n  }\n\n  _printTasks(filter = null) {\n    this.allTaskBox.querySelectorAll(\".task\").forEach((task) => {\n      task.remove();\n    });\n    taskVault.forEach((task) => {\n      if (\n        !task.taskPinned &&\n        (filter === null ||\n          filter === \"\" ||\n          task.taskText.toLowerCase().startsWith(filter.toLowerCase()))\n      ) {\n        const taskElement = document.createElement(\"div\");\n        taskElement.classList.add(\"task\");\n        taskElement.dataset.id = task.id;\n        taskElement.innerHTML = `<div>${task.taskText}</div><div class=\"circle\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>`;\n        this.allTaskBox.appendChild(taskElement);\n      }\n    });\n  }\n\n  _printPinned() {\n    this.pinned.querySelectorAll(\".task\").forEach((task) => {\n      task.remove();\n    });\n    taskVault.forEach((task) => {\n      if (task.taskPinned) {\n        const taskElement = document.createElement(\"div\");\n        taskElement.classList.add(\"task\");\n        taskElement.dataset.id = task.id;\n        taskElement.innerHTML = `<div>${task.taskText}</div><div class=\"circle\">&nbsp;V&nbsp;</div>`;\n        this.pinned.appendChild(taskElement);\n      }\n    });\n  }\n\n  _checkNotificationEmpty() {\n    const findNotification = this.allTaskBox.querySelector(\n      \".notification_empty\",\n    );\n\n    if (this.allTaskBox.querySelector(\".task\")) {\n      findNotification.classList.add(\"hidden\");\n    } else {\n      findNotification.classList.remove(\"hidden\");\n    }\n  }\n\n  addTask() {\n    const form = document.querySelector(\".form\");\n    form.addEventListener(\"submit\", (event) => {\n      this.inputTask.value = this.inputTask.value.trim();\n      if (this.inputTask.value) {\n        taskVault.push(new Task(this.inputTask.value));\n        this._printTasks();\n        this.inputTask.value = \"\";\n      }\n      this.allTaskBox\n        .querySelector(\".notification_empty\")\n        .classList.add(\"hidden\");\n      event.preventDefault();\n    });\n  }\n\n  pinnedTaskListIsEmpty() {\n    const notification = document.createElement(\"div\");\n    notification.classList.add(\"notification_pinned\");\n    notification.textContent = \"No pinned tasks\";\n    this.pinned.appendChild(notification);\n    const findNotification = this.pinned.querySelector(\".notification_pinned\");\n\n    const config = { attributes: true, childList: true, subtree: true };\n    const observer = new MutationObserver((mutations) => {\n      for (const mutation of mutations) {\n        if (mutation.type === \"childList\") {\n          if (!taskVault.find((task) => task.taskPinned)) {\n            findNotification.classList.remove(\"hidden\");\n          }\n        }\n      }\n    });\n    observer.observe(this.pinned, config);\n  }\n\n  addPinedTask() {\n    this.allTaskBox.addEventListener(\"click\", (event) => {\n      if (\n        Array.from(document.querySelectorAll(\".circle\")).includes(event.target)\n      ) {\n        const elementToPin = taskVault.find(\n          (target) =>\n            target.id.toString() === event.target.closest(\".task\").dataset.id,\n        );\n        elementToPin.taskPinned = true;\n        this._printPinned();\n        this._printTasks(this.inputTask.value);\n        this._checkNotificationEmpty();\n        const notification = this.pinned.querySelector(\".notification_pinned\");\n        if (notification) {\n          notification.classList.add(\"hidden\");\n        }\n      }\n    });\n  }\n\n  removePinedTask() {\n    this.pinned.addEventListener(\"click\", (event) => {\n      if (\n        Array.from(document.querySelectorAll(\".circle\")).includes(event.target)\n      ) {\n        const elementToPin = taskVault.find(\n          (target) =>\n            target.id.toString() === event.target.closest(\".task\").dataset.id,\n        );\n        elementToPin.taskPinned = false;\n        this._printPinned();\n        this._printTasks(this.inputTask.value);\n        this._checkNotificationEmpty();\n      }\n    });\n  }\n\n  filterTasks() {\n    const notification = document.createElement(\"div\");\n    notification.classList.add(\"notification_empty\", \"hidden\");\n    notification.textContent = \"No tasks found\";\n    this.allTaskBox.appendChild(notification);\n\n    this.inputTask.addEventListener(\"input\", (event) => {\n      this._printTasks(event.target.value);\n\n      this._checkNotificationEmpty();\n    });\n  }\n}\n","import { mainWindowStructore } from \"./mainWindowStructore\";\nimport { TaskManager } from \"./TaskManager\";\n\nfunction app() {\n  mainWindowStructore();\n  const taskManager = new TaskManager();\n  taskManager.addTask();\n  taskManager.pinnedTaskListIsEmpty();\n  taskManager.addPinedTask();\n  taskManager.removePinedTask();\n  taskManager.filterTasks();\n}\n\napp();\n","import \"./css/style.css\";\nimport \"./js/app.js\";\n"],"names":["mainWindowStructore","mainWindow","document","createElement","classList","add","innerHTML","body","appendChild","Task","constructor","taskText","taskPinned","id","Date","now","taskVault","TaskManager","allTaskBox","querySelector","pinned","inputTask","_printTasks","filter","arguments","length","undefined","querySelectorAll","forEach","task","remove","toLowerCase","startsWith","taskElement","dataset","_printPinned","_checkNotificationEmpty","findNotification","addTask","form","addEventListener","event","value","trim","push","preventDefault","pinnedTaskListIsEmpty","notification","textContent","config","attributes","childList","subtree","observer","MutationObserver","mutations","mutation","type","find","observe","addPinedTask","Array","from","includes","target","elementToPin","toString","closest","removePinedTask","filterTasks","app","taskManager"],"sourceRoot":""}